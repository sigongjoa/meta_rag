openapi: 3.0.3
info:
  title: "Meta-RAG API"
  description: "API for the Meta-RAG system, providing answers from a dual-path RAG backend."
  version: "1.0.0"

servers:
  - url: "https://meta-rag-api.your-domain.com/v1"
    description: "Production Server"
  - url: "http://localhost:8000"
    description: "Local Development Server"

paths:
  /chat:
    post:
      summary: "Send a query to the RAG system"
      description: "Receives a user query, routes it to the appropriate backend path (simple or advanced), and returns a generated answer with source context."
      operationId: "chatWithRAG"
      tags:
        - "Chat"
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChatRequest"
            example:
              query: "What is the capital of South Korea?"
              path_option: "simple"
      responses:
        '200':
          description: "Successful response from the RAG system."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChatResponse"
        '400':
          description: "Bad Request - The request body is malformed."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '401':
          description: "Unauthorized - JWT is missing or invalid."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

components:
  schemas:
    ChatRequest:
      type: object
      properties:
        query:
          type: string
          description: "The user's question."
          example: "How does photosynthesis work?"
      required:
        - query

    ChatResponse:
      type: object
      properties:
        answer:
          type: string
          description: "The final answer generated by the LLM."
          example: "Photosynthesis is the process used by plants..."
        sources:
          type: array
          description: "A list of source documents or nodes used to generate the answer."
          items:
            type: object
            properties:
              id:
                type: string
                example: "doc_123"
              content:
                type: string
                example: "The full text of the source document..."
              score:
                type: number
                format: float
                example: 0.912
        execution_path:
          type: string
          description: "The backend path that was used to process the request."
          example: "advanced"

    ErrorResponse:
      type: object
      properties:
        code:
          type: string
          description: "A unique error code."
          example: "invalid_request"
        message:
          type: string
          description: "A human-readable error message."
          example: "The 'query' field is required."

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: "User authentication with JSON Web Token."
