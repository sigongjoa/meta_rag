swagger: "2.0"
info:
  title: "Meta-RAG API"
  description: "API for the Meta-RAG system, providing answers from a dual-path RAG backend."
  version: "1.0.0"
schemes:
  - "https"
paths:
  /chat:
    post:
      summary: "Send a query to the RAG system"
      description: "Receives a user query, routes it to the appropriate backend path (simple or advanced), and returns a generated answer with source context."
      operationId: "chatWithRAG"
      tags:
        - "Chat"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "The request body for the chat query."
          required: true
          schema:
            $ref: "#/definitions/ChatRequest"
      security:
        - firebase: []
      x-google-backend:
        address: "${cloud_run_uri}/solve"
        path_translation: "CONSTANT_ADDRESS"
        jwt_audience: "${cloud_run_uri}"
        deadline: 300
      responses:
        '200':
          description: "Successful response from the RAG system."
          schema:
            $ref: "#/definitions/ChatResponse"
        '400':
          description: "Bad Request - The request body is malformed."
          schema:
            $ref: "#/definitions/ErrorResponse"
        '401':
          description: "Unauthorized - JWT is missing or invalid."
          schema:
            $ref: "#/definitions/ErrorResponse"
securityDefinitions:
  firebase:
    authorizationUrl: ""
    flow: "implicit"
    type: "oauth2"
    x-google-issuer: "https://securetoken.google.com/meta-476400"
    x-google-jwks_uri: "https://www.googleapis.com/service_accounts/v1/jwk/securetoken@system.gserviceaccount.com"
    x-google-audiences: "meta-476400"
definitions:
  ChatRequest:
    type: object
    properties:
      query:
        type: string
        description: "The user's question."
        example: "How does photosynthesis work?"
    required:
      - query
  ChatResponse:
    type: object
    properties:
      answer:
        type: string
        description: "The final answer generated by the LLM."
        example: "Photosynthesis is the process used by plants..."
      sources:
        type: array
        description: "A list of source documents or nodes used to generate the answer."
        items:
          type: object
          properties:
            id:
              type: string
              example: "doc_123"
            content:
              type: string
              example: "The full text of the source document..."
            score:
              type: number
              format: float
              example: 0.912
      execution_path:
        type: string
        description: "The backend path that was used to process the request."
        example: "advanced"
  ErrorResponse:
    type: object
    properties:
      code:
        type: string
        description: "A unique error code."
        example: "invalid_request"
      message:
        type: string
        description: "A human-readable error message."
        example: "The 'query' field is required."